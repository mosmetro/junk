local defold = _G

-- import
local MSG = require("scripts.shared.messages")
local LAYER = require("scripts.shared.layers")
local game = require("scripts.platformer.game")

-- localization
local set_position = go.set_position
-- local get_position = go.get_position
local get_id = go.get_id
local vector3 = vmath.vector3
local post = msg.post

function defold.init (self)
  self.gameobject = get_id()
  set_position(vector3(), self.gameobject)
  post(self.gameobject, MSG.SET_PARENT, { parent_id = get_id("/camera"), keep_world_transform = 0 })

  local forest_near = get_id("forest_near")
  local forest_near_position = vector3()
  forest_near_position.z = LAYER.PARALLAX_1
  set_position(forest_near_position, forest_near)

  local forest_far = get_id("forest_far")
  local forest_far_position = vector3()
  forest_far_position.z = LAYER.PARALLAX_2
  set_position(forest_far_position, forest_far)

  local sky_near = get_id("sky_near")
  local sky_near_position = vector3()
  sky_near_position.z = LAYER.PARALLAX_3
  set_position(sky_near_position, sky_near)

  local sky_far = get_id("sky_far")
  local sky_far_position = vector3()
  sky_far_position.z = LAYER.PARALLAX_4
  set_position(sky_far_position, sky_far)

  local FOREST_NEAR_X = 160
  local FOREST_FAR_X  = 80
  local SKY_NEAR_X = 80
  local SKY_FAR_X  = 40

  local FOREST_NEAR_Y = 96
  local FOREST_FAR_Y  = 48
  local SKY_NEAR_Y = 48
  local SKY_FAR_Y  = 24

  self.follow_camera = function(_, camera_x, camera_y)
    forest_near_position.x = -FOREST_NEAR_X * camera_x
    forest_near_position.y = -FOREST_NEAR_Y * camera_y
    set_position(forest_near_position, forest_near)

    forest_far_position.x = -FOREST_FAR_X * camera_x
    forest_far_position.y = -FOREST_FAR_Y * camera_y
    set_position(forest_far_position, forest_far)

    sky_near_position.x = -SKY_NEAR_X * camera_x
    sky_near_position.y = -SKY_NEAR_Y * camera_y
    set_position(sky_near_position, sky_near)

    sky_far_position.x = -SKY_FAR_X * camera_x
    sky_far_position.y = -SKY_FAR_Y * camera_y
    set_position(sky_far_position, sky_far)
  end

  game.get_shared_data(self.gameobject).context = self
end

function defold.final (self)
  game.remove_shared_data(self.gameobject)
end
