local ui = require("m.ui.ui")
local colors = require("m.colors")
-- local utils = require("m.utils")

local game = require("pixelfrog.game.game")

local defold = _G
local set_render_order = gui.set_render_order
local set_enabled = gui.set_enabled
local get_node = gui.get_node
local set_color = gui.set_color
local set_size = gui.set_size
local animate = gui.animate
local COLOR = gui.PROP_COLOR
local TRANSITION_ON_SCREEN = gui.EASING_INOUTSINE
local TRANSITION_OFF_SCREEN = gui.EASING_INOUTSINE
local vector3_stub = fastmath.vector3_stub
local vector3_set_xyz = fastmath.vector3_set_xyz

local fadein
local fadeout

local TRANSPARENT_BLACK = colors.TRANSPARENT_BLACK
local BLACK = colors.BLACK
local TRANSITION_DURATION = 0.25

local fader

function defold.init(self)
   ui.fader_context = self
   fader = get_node("box")
   vector3_set_xyz(vector3_stub, game.view_width, game.view_height, 0)
   set_size(fader, vector3_stub)
   set_render_order(ui.FOREGROUND)
   self.fadein = fadein
   self.fadeout = fadeout
end -- defold.init

function defold.final()
   ui.fader_context = nil
end -- defold.final

-- (context, ...)
function fadein(_, callback, duration)
   set_enabled(fader, true)
   set_color(fader, TRANSPARENT_BLACK)
   animate(fader, COLOR, BLACK, TRANSITION_ON_SCREEN, duration or TRANSITION_DURATION, 0, callback, gui.PLAYBACK_ONCE_FORWARD)
end -- fadein

function fadeout(_, callback, duration)
   set_color(fader, BLACK)
   animate(fader, COLOR, TRANSPARENT_BLACK, TRANSITION_OFF_SCREEN, duration or TRANSITION_DURATION, 0, function()
      set_enabled(fader, false)
      if callback then callback() end
   end, gui.PLAYBACK_ONCE_FORWARD)
end -- fadeout
