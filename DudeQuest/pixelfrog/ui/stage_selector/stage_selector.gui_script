local ui = require("m.ui.ui")
-- local nc = require("m.notification_center")
local const = require("m.constants")
local colors = require("m.colors")
local utils = require("m.utils")

local game = require("pixelfrog.game.game")
-- local snd = require("sound.sound")
-- local gamestate = require("pixelfrog.game.gamestate")
local Button = require("pixelfrog.ui.button")

local defold = _G
local msg = msg
local gui = gui
local hash = hash
local vector3_stub = fastmath.vector3_stub

local root
local back_button
local stage1_button

local selected_stage

local function appearance_complete()
   ui.first_responder = ui.stage_selector_context
   back_button.enable()
   stage1_button.enable()
end -- appearance_complete

local function enable()
   msg.post("#", msg.ENABLE)

   for _, control in next, ui.stage_selector_context.controls do
      control.deactivate()
   end

   fastmath.vector3_set_xyz(vector3_stub, 0, 30, 0)
   gui.set_position(root, vector3_stub)
   gui.set_color(root, colors.TRANSPARENT_WHITE)
   gui.animate(root, gui.PROP_COLOR, colors.WHITE, gui.EASING_LINEAR, 0.5)
   gui.animate(root, const.POSITION_Y, 0, go.EASING_OUTBACK, 0.5, 0, appearance_complete)
end -- enable

local function to_home()
   runtime.execute_in_context(ui.home_context.enable, ui.home_context, false)
   msg.post("#", msg.DISABLE)
end -- to_home

local function to_level_selector()
   runtime.execute_in_context(ui.level_selector_context.enable, ui.level_selector_context, selected_stage)
   msg.post("#", msg.DISABLE)
end -- to_level_selector

local function disable(_, callback)
   gui.animate(root, gui.PROP_COLOR, colors.TRANSPARENT_WHITE, gui.EASING_LINEAR, 0.5)
   gui.animate(root, const.POSITION_Y, 30, go.EASING_INBACK, 0.5, 0, callback)
   runtime.execute_in_context(ui.backdrop_context.disable, ui.backdrop_context)
end -- disable

function defold.init(self)
   msg.post("#", msg.DISABLE)
   ui.stage_selector_context = self
   gui.set_render_order(ui.MENU)
   self.enable = enable
   self.disable = disable

   root = gui.get_node("root")

   back_button = Button.new {
      node = gui.get_node("back"),
      -- margin_horizontal = 10,
      -- margin_up = 10,
      released_animation = hash("back_released"),
      pressed_animation = hash("back_pressed"),
      callback = function()
         ui.first_responder = nil
         disable(nil, to_home)
      end,
   }

   stage1_button = Button.new {
      node = gui.get_node("stage1"),
      released_animation = hash("stage1_released"),
      pressed_animation = hash("stage1_pressed"),
      callback = function()
         selected_stage = 1
         ui.first_responder = nil
         disable(nil, to_level_selector)
      end,
   }

   local x = -80 - (-80 - game.view_left) * 0.5
   x = fastmath.clamp(x, -104, 0)
   fastmath.vector3_set_xyz(vector3_stub, x, 0, 0)
   gui.set_position(back_button.node, vector3_stub)

   self.controls = {
      back_button,
      stage1_button,
   }
end -- defold.init
